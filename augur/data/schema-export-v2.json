{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$id": "https://nextstrain.org/schemas/dataset/v2",
    "type": "object",
    "title": "Nextstrain dataset v2",
    "description": "Typically produced by Augur (`augur export v2`) and consumed by Auspice.  Combines dataset v1 meta and tree files together into one file, with additional changes.",
    "additionalProperties": false,
    "required": ["version", "meta", "tree"],
    "properties": {
        "version" : {
            "description": "Major schema version",
            "const": "v2"
        },
        "meta": {
            "type": "object",
            "$comment": "Metadata associated with phylogeny",
            "additionalProperties": false,
            "required": ["updated", "panels"],
            "properties" : {
                "title" : {
                    "description": "Auspice displays this at the top of the page",
                    "type" : "string"
                },
                "updated" : {
                    "description": "Auspice displays this (currently only in the footer)",
                    "type" : "string",
                    "pattern": "^[0-9X]{4}-[0-9X]{2}-[0-9X]{2}$"
                },
                "build_url" : {
                    "description": "Auspice displays this at the top of the page as part of a byline",
                    "type" : "string"
                },
                "description" : {
                    "description": "Auspice displays this currently in the footer.",
                    "$comment": "Generally a description of the phylogeny and/or acknowledgements in Markdown format.",
                    "type": "string"
                },
                "maintainers": {
                    "description": "Who maintains this dataset?",
                    "$comment": "order similar to a publication",
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {"type": "string"},
                            "url": {"type": "string"}
                        },
                        "required": ["name"]
                    }
                },
                "genome_annotations": {
                    "description": "Genome annotations (e.g. genes), relative to the reference genome",
                    "$comment": "Required for the entropy panel",
                    "type": "object",
                    "required": ["nuc"],
                    "additionalProperties": false,
                    "properties": {
                        "nuc": {
                            "type": "object",
                            "properties": {
                                "seqid":{
                                    "description": "Sequence on which the coordinates below are valid. Could be viral segment, bacterial contig, etc",
                                    "$comment": "currently unused by Auspice",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of the feature. could be mRNA, CDS, or similar",
                                    "$comment": "currently unused by Auspice",
                                    "type": "string"
                                },
                                "start": {
                                    "description": "Gene start position (one-based, following GFF format)",
                                    "type": "number"
                                },
                                "end": {
                                    "description": "Gene end position (one-based closed, last position of feature, following GFF format)",
                                    "type": "number"
                                },
                                "strand": {
                                    "description": "Positive or negative strand",
                                    "type": "string",
                                    "enum": ["-","+"]
                                }
                            }
                        }
                    },
                    "patternProperties": {
                        "^[a-zA-Z0-9*_-]+$": {"$ref": "#/properties/meta/properties/genome_annotations/properties/nuc"}
                    }
                },
                "filters": {
                    "description": "These appear as filters in the footer of Auspice (which populates the displayed values based upon the tree)",
                    "$comment": "These values must be present as keys on a tree node -> trait",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {"type": "string"}
                },
                "panels": {
                    "description": "Which panels should Auspice display?",
                    "$comment": "If additional JSONs are required (e.g. for frequencies), they will be fetched after parsing this array",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["tree", "map", "frequencies", "entropy"]
                    },
                    "uniqueItems": true,
                    "minItems": 1
                },
                "extensions": {
                    "description": "Data to be passed through to the the resulting dataset JSON",
                    "$comment": "Any type is accepted"
                },
                "geo_resolutions": {
                    "description": "The available options for the geographic resolution dropdown, and their lat/long information",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "description": "Each object here is an indiviual geo resolution",
                        "additionalProperties": false,
                        "required": ["key", "demes"],
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "Trait key - must be specified on nodes (e.g. 'country')"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title to display in the geo resolution dropdown. Optional -- if not provided then `key` will be used."
                            },
                            "demes": {
                                "type": "object",
                                "description": "The deme names & lat/long info for this geographic resolution",
                                "$comment": "Each value defined across the tree needs to be present here, else Auspice cannot display the deme appropriately",
                                "patternProperties": {
                                    "^[a-z_]+$": {
                                        "description": "Lat/long info for this deme",
                                        "$comment": "one day this may define a shape / polygon",
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "latitude": {
                                                "type": "number",
                                                "minimum": -90,
                                                "maximum": 90
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "minimum": -180,
                                                "maximum": 180
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "colorings": {
                    "description": "Available colorBys for Auspice",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "description": "Each object here is an individual coloring, which will populate the sidebar dropdown in auspice",
                        "required": ["key", "type"],
                        "properties": {
                            "key": {
                                "description": "They key used to access the value of this coloring on each node",
                                "type": "string"
                            },
                            "title": {
                                "description": "Text to be displayed in the \"color by\" dropdown and the tree legend",
                                "$comment": "string is parsed unchanged by Auspice",
                                "type": "string"
                            },
                            "type": {
                                "description": "Dictates how the color scale should be constructed",
                                "$comment": "The trait values (defined on tree nodes) must be numeric for continuous types, True / False for boolean, string or numeric for ordinal / categorical",
                                "type": "string",
                                "enum": ["continuous", "ordinal", "categorical", "boolean"]
                            },
                            "scale": {
                                "description": "Provided mapping between trait values & hex values",
                                "$comment": "For continuous scales at least 2 items must be specified",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": [
                                        {
                                            "type": ["string", "number"],
                                            "description": "For categorical/ordinal scales, this is the (string) value of the trait to associate with the colour. For continuous scales this is the (numeric) value to associate to with the colour, and interpolation will be used to span the domain"
                                        },
                                        {"type": "string", "description": "color hex value", "pattern": "^#[0-9A-Fa-f]{6}$"}
                                    ]
                                }
                            },
                            "legend": {
                                "description": "Specify the entries displayed in the legend. This can be used to restrict the entries in the legend for display without otherwise affecting the data viz",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": ["value"],
                                    "properties": {
                                        "value": {
                                            "description": "value to associate with this legend entry. Used to determine colour. For non-continuous scales this also determines the matching between legend items and data.",
                                            "type": ["string", "number"],
                                            "$comment": "Continuous scales must use a numeric value. Other scales can use either."
                                        },
                                        "display": {
                                            "description": "Label to display in the legend. Optional - `value` will be used if this is not provided.",
                                            "type": ["string", "number"]
                                        },
                                        "bounds": {
                                            "description": "(for continuous scales only) provide the lower & upper bounds to match data to this legend entry. Bounds from different legend entries must not overlap. Matching is (a, b] - exclusive of the lower bound, inclusive of the upper.",
                                            "type": "array",
                                            "items": [
                                                {"type": "number", "description": "lower bound"},
                                                {"type": "number", "description": "upper bound"}
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "display_defaults": {
                    "description": "Set the defaults for certain display options in Auspice. All are optional.",
                    "$comment": "Anything able to be encoded in the auspice URL should be an option here, so this will expand over time",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "geo_resolution": {
                            "description": "Default geographic resolution",
                            "$comment": "The value here must be present in the geo object (see above)",
                            "type": "string"
                        },
                        "color_by": {
                            "description": "Default color by",
                            "$comment": "The value here must be present in the colorings object (see above)",
                            "type": "string"
                        },
                        "distance_measure": {
                            "description": "Default tree metric",
                            "type": "string",
                            "enum": ["div", "num_date"]
                        },
                        "layout": {
                          "description": "Default tree layout",
                          "type": "string",
                          "enum": ["rect", "radial", "unrooted", "clock"]
                        },
                        "map_triplicate": {
                            "description": "Should the map be extended / wrapped around. Useful if transmissions are worldwide.",
                            "type": "boolean"
                        },
                        "branch_label": {
                            "description": "What branch label should be displayed by default.",
                            "type": "string"
                        },
                        "transmission_lines": {
                            "description": "Should transmission lines (if available) be displaye by default",
                            "type": "boolean"
                        }
                    }
                },
                "tree_name" : {
                  "description": "The name of the tree (e.g. segment name), if applicable",
                  "$comment": "This is required if you want to view two trees side-by-side",
                  "$comment": "It should match a field in the JSON filename after splitting on '_'",
                  "$comment": "e.g. `flu_h3n2_ha_3y` has a tree name of `ha`",
                  "type": "string"
                },
                "frequencies": {
                    "$comment": "Frequencies could be specified here if desired",
                    "$comment": "If not specified, and frequencies are asked for in #/panels, then Auspice will attempt to fetch a seperate JSON",
                    "$comment": "cc John / Trevor"
                },
                "data_provenance": {
                    "description": "Specify provenance of data included in this analysis",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "description": "An individual data source",
                        "additionalProperties": false,
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "description": "Name of the data source",
                                "type": "string"
                            },
                            "url": {
                                "description": "URL to use in link to data source",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "tree": {
            "description": "One or more phylogenies using a nested JSON structure",
            "oneOf": [
                {"$ref": "#/$defs/tree"},
                {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/$defs/tree"}
                }
            ]
        }
    },
    "$defs": {
        "tree": {
            "type" : "object",
            "$comment": "The phylogeny in a nested JSON structure",
            "additionalProperties": false,
            "required": ["name"],
            "properties": {
                "name": {
                    "description": "Strain name. Must be unique. No spaces",
                    "type": "string"
                },
                "node_attrs": {
                    "description": "attributes associated with the node (sequence, date, location) as opposed to changes from one node to another.",
                    "type": "object",
                    "properties": {
                        "div": {
                            "description": "Node (phylogenetic) divergence",
                            "$comment": "Cumulative (root = 0)",
                            "type": "number"
                        },
                        "num_date": {
                            "$comment": "Sample date in decimal format (e.g. 2012.1234)",
                            "$comment": "This is the only date information. We no longer have string dates.",
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {"type": "number"},
                                "confidence": {
                                    "description": "Confidence of the node date",
                                    "type": "array",
                                    "items": [
                                        {"type": "number"},
                                        {"type": "number"}
                                    ]
                                }
                            }
                        },
                        "vaccine": {
                            "description": "Vaccine information",
                            "properties": {
                                "serum": {
                                    "description": "strain used to raise sera (for ???)",
                                    "$comment": "Currently in the flu & dengue trees",
                                    "type": "boolean"
                                },
                                "selection_date": {
                                    "description": "Vaccine selection date",
                                    "$comment": "this is currently in the metadata JSON",
                                    "type": "string",
                                    "pattern": "^[0-9X]{4}-[0-9X]{2}-[0-9X]{2}$"
                                },
                                "start_date": {
                                    "description": "Vaccine usage start date",
                                    "type": "string",
                                    "pattern": "^[0-9X]{4}-[0-9X]{2}-[0-9X]{2}$"
                                },
                                "end_date": {
                                    "description": "When the vaccine was stopped",
                                    "$comment": "if vaccine still in use, don't include this property",
                                    "type": "string",
                                    "pattern": "^[0-9X]{4}-[0-9X]{2}-[0-9X]{2}$"
                                }
                            }
                        },
                        "hidden": {
                            "$comment": "Instruct auspice to hide the branches from this node to it's children",
                            "type": "string",
                            "enum": ["always", "timetree", "divtree"]
                        },
                        "url": {
                            "description": "URL of the sequence (usually https://www.ncbi.nlm.nih.gov/nuccore/...)",
                            "$comment": "terminal nodes only",
                            "type": "string",
                            "pattern": "^https?://.+$"
                        },
                        "author": {
                            "description": "Author information (terminal nodes only)",
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {
                                    "description": "unique value for this publication. Displayed as-is by auspice.",
                                    "type": "string"
                                },
                                "title": {
                                  "description": "Publication title",
                                  "type": "string"
                                },
                                "journal": {
                                    "description": "Journal title (including year, if applicable)",
                                    "type": "string"
                                },
                                "paper_url": {
                                    "description": "URL link to paper (if available)",
                                    "type": "string",
                                    "pattern": "^https?://.+$"
                                }
                            }
                        },
                        "accession": {
                            "description": "Sequence accession number",
                            "$comment": "terminal nodes only",
                            "type": "string",
                            "pattern": "^[0-9A-Za-z-_.]+$"
                        }
                    },
                    "patternProperties": {
                        "(?!div|num_date|vaccine|hidden|url|author|accession)(^.+$)": {
                            "description": "coloring / geo resolution information attached to this node",
                            "$comment": "property name must match the `key` property provided as a coloring / geo_resolution",
                            "$comment": "JSON schema defined properties must also validate agaisnt patternProperties if they match. Hence the complex regex.",
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {
                                    "type": ["string", "number", "boolean"]
                                },
                                "confidence": {
                                    "description": "Confidence of the trait date",
                                    "$comment": "Should we use different keys for the two structures here?",
                                    "oneOf": [
                                        {
                                            "type": "array",
                                            "$comment": "Only used if the value is numeric",
                                            "items": [
                                                {"type": "number"},
                                                {"type": "number"}
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "$comment": "Only used if the value is a string",
                                            "$comment": "alternative possibilities & their confidence values",
                                            "patternProperties": {
                                                "^.+$": {
                                                    "type": "number",
                                                    "minimum": 0.0,
                                                    "maximum": 1.0
                                                }
                                            }
                                        }
                                    ]
                                },
                                "entropy": {
                                    "$comment": "Auspice uses this to control opacity of the color-by",
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "branch_attrs": {
                    "description": "attributes associated with the branch from the parent node to this node, such as branch lengths, mutations, support values",
                    "type": "object",
                    "properties": {
                        "labels": {
                            "description": "Node labels",
                            "$comment": "Auspice scans this to generate the branch labels dropdown",
                            "patternProperties": {
                                "^[a-zA-Z0-9]+$": {
                                    "$comment": "e.g. clade->3c3a",
                                    "$comment": "string is parsed unchanged by Auspice",
                                    "type": "string"
                                }
                            }
                        },
                        "mutations": {
                            "description": "Mutations occuring between the parent and this node",
                            "$comment": "same numbering scheme as used by the meta.JSON -> annotations",
                            "$comment": "combining nuc + AAs parallels the metadata -> annotations structure",
                            "type": "object",
                            "additionalProperties": false,
                            "properties":  {
                                "nuc": {
                                    "description": "nucelotide mutations",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {"type": "string", "pattern": "^[ATCGNYRWSKMDVHB-][0-9]+[ATCGNYRWSKMDVHB-]$"},
                                        {"type": "string", "pattern": "^insertion [0-9]+-[0-9]+$", "$comment": "TODO unused by auspice"},
                                        {"type": "string", "pattern": "^deletion [0-9]+-[0-9]+$", "$comment": "TODO unused by auspice"}
                                      ]
                                    }
                                }
                            },
                            "patternProperties": {
                                "^[a-zA-Z0-9_-]+$": {
                                    "description": "Amino acid mutations for this gene (or annotated region)",
                                    "$comment": "properties must exist in the meta.JSON -> annotation object",
                                    "type": "array",
                                    "items": {
                                      "pattern": "^[A-Z*-][0-9]+[A-Z*-]$"
                                    }
                                }
                            }
                        }
                    }
                },
                "children": {
                    "description": "Child nodes. Recursive structure. Terminal nodes do not have this property.",
                    "$comment": "Polytomies (more than 2 items) allowed, as are nodes with a single child.",
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/$defs/tree"}
                }
            }
        }
    }
}

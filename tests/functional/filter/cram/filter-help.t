Setup

  $ source "$TESTDIR"/_setup.sh

Show help text

  $ ${AUGUR} filter --help
  usage: augur filter [-h] --metadata FILE [--sequences FILE]
                      [--sequence-index FILE] [--metadata-chunk-size N]
                      [--metadata-id-columns COLUMN [COLUMN ...]]
                      [--metadata-delimiters DELIMITER [DELIMITER ...]]
                      [--query QUERY] [--query-columns COLUMN [COLUMN ...]]
                      [--min-date DATE] [--max-date DATE]
                      [--exclude-ambiguous-dates-by LEVEL]
                      [--exclude FILE [FILE ...]]
                      [--exclude-where CONDITION [CONDITION ...]]
                      [--exclude-all] [--include FILE [FILE ...]]
                      [--include-where CONDITION [CONDITION ...]]
                      [--min-length N] [--max-length N] [--non-nucleotide]
                      [--group-by COLUMN [COLUMN ...]]
                      [--sequences-per-group N | --subsample-max-sequences N]
                      [--probabilistic-sampling | --no-probabilistic-sampling]
                      [--priority FILE] [--subsample-seed N] [--output FILE]
                      [--output-metadata FILE] [--output-strains FILE]
                      [--output-log FILE]
                      [--empty-output-reporting {error,warn,silent}]
  
  Filter and subsample a sequence set.
  
  option.* (re)
    -h, --help            show this help message and exit
  
  Inputs:
    Metadata and sequences to be filtered.
  
    --metadata FILE       Sequence metadata.
    --sequences FILE, -s FILE
                          Sequences in FASTA or VCF format.
    --sequence-index FILE
                          Sequence composition report generated by augur index.
                          If not provided, an index will be created on the fly.
    --metadata-chunk-size N
                          Maximum number of metadata records to read into memory
                          at a time. Increasing this number can speed up
                          filtering at the cost of more memory used. (default:
                          100000)
    --metadata-id-columns COLUMN [COLUMN ...]
                          Names of possible metadata columns containing strain
                          identifier information, ordered by priority. Only one
                          ID column will be inferred. (default: ('strain',
                          'name'))
    --metadata-delimiters DELIMITER [DELIMITER ...]
                          Delimiters to accept when reading a metadata file.
                          Only one delimiter will be inferred. (default: (',',
                          '\t'))
  
  Metadata filters:
    Filters to apply to metadata.
  
    --query QUERY         Filter strains by attribute. Uses Pandas DataFrame
                          querying, see https://pandas.pydata.org/pandas-
                          docs/stable/user_guide/indexing.html#indexing-query
                          for syntax. (e.g., --query "country == 'Colombia'" or
                          --query "(country == 'USA' & (division ==
                          'Washington'))")
    --query-columns COLUMN [COLUMN ...]
                          Use alongside --query to specify columns and data
                          types in the format 'column:type', where type is one
                          of ['bool', 'float', 'int', 'str']. Automatic type
                          inference will be attempted on all unspecified columns
                          used in the query. Example: region:str coverage:float.
    --min-date DATE       Minimal cutoff for date, the cutoff date is inclusive;
                          may be specified as: 1. an Augur-style numeric date
                          with the year as the integer part (e.g. 2020.42) or 2.
                          a date in ISO 8601 date format (i.e. YYYY-MM-DD) (e.g.
                          '2020-06-04') or 3. a backwards-looking relative date
                          in ISO 8601 duration format with optional P prefix
                          (e.g. '1W', 'P1W')
    --max-date DATE       Maximal cutoff for date, the cutoff date is inclusive;
                          may be specified as: 1. an Augur-style numeric date
                          with the year as the integer part (e.g. 2020.42) or 2.
                          a date in ISO 8601 date format (i.e. YYYY-MM-DD) (e.g.
                          '2020-06-04') or 3. a backwards-looking relative date
                          in ISO 8601 duration format with optional P prefix
                          (e.g. '1W', 'P1W')
    --exclude-ambiguous-dates-by LEVEL
                          Exclude ambiguous dates by day (e.g., 2020-09-XX),
                          month (e.g., 2020-XX-XX), year (e.g., 200X-10-01), or
                          any date fields. An ambiguous year makes the
                          corresponding month and day ambiguous, too, even if
                          those fields have unambiguous values (e.g.,
                          "201X-10-01"). Similarly, an ambiguous month makes the
                          corresponding day ambiguous (e.g., "2010-XX-01").
    --exclude FILE [FILE ...]
                          File(s) with list of strains to exclude.
    --exclude-where CONDITION [CONDITION ...]
                          Exclude strains matching these conditions. Ex:
                          "host=rat" or "host!=rat". Multiple values are
                          processed as OR (matching any of those specified will
                          be excluded), not AND.
    --exclude-all         Exclude all strains by default. Use this with the
                          include arguments to select a specific subset of
                          strains.
    --include FILE [FILE ...]
                          File(s) with list of strains to include regardless of
                          priorities, subsampling, or absence of an entry in
                          --sequences.
    --include-where CONDITION [CONDITION ...]
                          Include strains with these values. ex: host=rat.
                          Multiple values are processed as OR (having any of
                          those specified will be included), not AND. This rule
                          is applied last and ensures any strains matching these
                          rules will be included regardless of priorities,
                          subsampling, or absence of an entry in --sequences.
  
  Sequence filters:
    Filters to apply to sequence data.
  
    --min-length N        Minimal length of the sequences, only counting
                          standard nucleotide characters A, C, G, or T (case-
                          insensitive).
    --max-length N        Maximum length of the sequences, only counting
                          standard nucleotide characters A, C, G, or T (case-
                          insensitive).
    --non-nucleotide      Exclude sequences that contain illegal characters.
  
  Subsampling:
    Options to subsample filtered data.
  
    --group-by COLUMN [COLUMN ...]
                          Categories with respect to subsample. Notes: (1)
                          Grouping by ['month', 'week', 'year'] is only
                          supported when there is a 'date' column in the
                          metadata. (2) 'week' uses the ISO week numbering
                          system, where a week starts on a Monday and ends on a
                          Sunday. (3) 'month' and 'week' grouping cannot be used
                          together. (4) Custom columns ['month', 'week', 'year']
                          in the metadata are ignored for grouping. Please
                          rename them if you want to use their values for
                          grouping.
    --sequences-per-group N
                          Subsample to no more than this number of strains per
                          category.
    --subsample-max-sequences N
                          Subsample to no more than this number of strains; can
                          be used without --group-by.
    --probabilistic-sampling
                          Allow probabilistic sampling during subsampling. This
                          is useful when there are more groups than requested
                          strains. This option only applies when `--subsample-
                          max-sequences` is provided. (default: True)
    --no-probabilistic-sampling
    --priority FILE       Tab-delimited file with list of priority scores for
                          strains (e.g., "<strain>\t<priority>") and no header.
                          When scores are provided, Augur converts scores to
                          floating point values, sorts strains within each
                          subsampling group from highest to lowest priority, and
                          selects the top N strains per group where N is the
                          calculated or requested number of strains per group.
                          Higher numbers indicate higher priority. Since
                          priorities represent relative values between strains,
                          these values can be arbitrary.
    --subsample-seed N    Random number generator seed to allow reproducible
                          subsampling (with same input data).
  
  Outputs:
    Options related to outputs. At least one of the possible representations
    of filtered data (--output, --output-metadata, --output-strains) is
    required.
  
    --output FILE, --output-sequences FILE, -o FILE
                          Filtered sequences in FASTA format.
    --output-metadata FILE
                          Metadata for strains that passed filters.
    --output-strains FILE
                          List of strains that passed filters (no header).
    --output-log FILE     Tab-delimited file with one row for each filtered
                          strain and the reason it was filtered. Keyword
                          arguments used for a given filter are reported in JSON
                          format in a `kwargs` column.
    --empty-output-reporting {error,warn,silent}
                          How should empty outputs be reported when no strains
                          pass filtering and/or subsampling. (default: error)

name: CI
on: [push, pull_request]
jobs:
  test:
    name: test (python=${{ matrix.python-version }} biopython=${{ matrix.biopython-version || 'latest' }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        biopython-version:
          # list of Biopython versions with support for a new Python version
          # from https://github.com/biopython/biopython/blob/master/NEWS.rst
          - '1.73' # first to support Python 3.7
          - '1.76' # first to support Python 3.8
          - '1.79' # first to support Python 3.9
          - ''     # latest
        exclude:
          # some older Biopython versions are incompatible with later Python versions
          - { biopython-version: '1.73', python-version: '3.8' }
          - { biopython-version: '1.73', python-version: '3.9' }
          - { biopython-version: '1.73', python-version: '3.10' }
          - { biopython-version: '1.76', python-version: '3.9' }
          - { biopython-version: '1.76', python-version: '3.10' }
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge,bioconda
        channel-priority: true
        activate-environment: test
    - run: mamba install mafft raxml fasttree iqtree vcftools
    - run: mamba install biopython=${{ matrix.biopython-version }}
    - run: pip install -e .[dev]
    - run: conda info
    - run: conda list
    - run: pytest -c pytest.python3.ini  --cov-report=xml --cov=augur
    - run: cram --shell=/bin/bash tests/functional/*.t tests/builds/*.t
    - run: bash tests/builds/runner.sh
    - if: github.repository == 'nextstrain/augur' && matrix.python-version == '3.10' && matrix.biopython-version == ''
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
  deploy:
    if: github.repository == 'nextstrain/augur' && github.ref == 'refs/heads/release'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - env:
          TRAVIS_AUTH_TOKEN: ${{ secrets.TRAVIS_AUTH_TOKEN }}
        run: |
          set -euo pipefail

          echo "Pinging Travis CI to rebuild Docker image"

          body='{
            "request": {
              "branch": "master",
              "message": "Build triggered from augur"
            }
          }'

          curl -X POST https://api.travis-ci.com/repo/nextstrain%2Fdocker-base/requests \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Travis-API-Version: 3" \
            -H "Authorization: token $TRAVIS_AUTH_TOKEN" \
            -d "$body"
